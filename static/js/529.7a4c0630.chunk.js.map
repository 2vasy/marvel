{"version":3,"file":"static/js/529.7a4c0630.chunk.js","mappings":"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","sources":["components/errorMessage/errorMessage.js","components/pages/SingleComicPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    // <img src={ProcessingInstruction.env.PUBLIC_URL + '/error.gif'} alt=\"error\" />\r\n    <img  style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt=\"error.gif\" />\r\n  )\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useParams, Link } from 'react-router-dom';\r\nimport { useEffect, useState, } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\nimport Spinner from '../spinner/spinner';\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState(null);\r\n\r\n  const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n  }, [comicId])\r\n\r\n\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComic(comicId)\r\n      .then(onComicLoaded)\r\n  }\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  }\r\n\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n  return (\r\n    <>\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nconst View = ({ comic }) => {\r\n  const {title, description, pageCount, thumbnail, language, price } = comic;\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{title}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount}</p>\r\n        <p className=\"single-comic__descr\">{language}</p>\r\n        <div className=\"single-comic__price\">{price}</div>\r\n      </div>\r\n      <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleComicPage;","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url, { method, body, headers });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setLoading(false);\r\n      return data;\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(e.massage);\r\n      throw e;\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {\r\n    loading,\r\n    request,\r\n    error,\r\n    clearError\r\n  }\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const {loading, request, error, clearError} = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=9dd034565ccd5274cc3af31734f6373c';\r\n  const _baseOffset = 210;\r\n\r\n\r\n  const getAllCharacters = async (offset =_baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter)\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n      );\r\n    return res.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n    return _transformComics(res.data.results[0]);\r\n  }\r\n  \r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getComic\r\n  }\r\n}\r\n\r\n\r\nexport default useMarvelService;"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","View","_ref","comic","title","description","pageCount","thumbnail","language","price","_jsxs","className","children","Link","to","SingleComicPage","comicId","useParams","setComic","useState","loading","error","getComic","clearError","useMarvelService","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","Spinner","content","_Fragment","request","useHttp","setLoading","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","massage","_apiBase","_apiKey","_transformCharacter","char","id","name","slice","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","textObjects","prices","getAllCharacters","offset","results","map","getCharacter","res","getAllComics"],"sourceRoot":""}